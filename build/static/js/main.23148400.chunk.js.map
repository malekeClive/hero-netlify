{"version":3,"sources":["Components/SearchInput.js","Components/Menu.js","Components/Heroes.js","App.js","serviceWorker.js","index.js"],"names":["SearchInput","searchHandler","setSearchInputHandler","searchInputHandler","inputSearch","useRef","className","css","onClick","current","focus","onSubmit","ref","placeholder","type","onChange","e","target","value","Menu","clickedMenu","setClickedMenu","clicked","unClicked","Heroes","heroes","heroAction","useState","isClicked","setIsClicked","heroDetails","setHeroDetails","onClickedSearchHero","id","getHero","find","val","console","log","Modal","resetVal","map","hero","Hero","clickedHero","key","isOpen","setIsOpen","useEffect","Biography","PowerStats","powerstats","hasOwnProperty","appearance","image","url","stats","setStats","combat","durability","intelligence","power","speed","strength","biography","setBiography","Object","keys","length","name","aliases","alias","idx","publisher","App","heroName","setHeroName","favoriteHero","setFavoriteHero","hasError","setError","searchInput","setSearchInput","menu","setMenu","loading","setLoading","CheckClickedMenu","onRemoveHeroFromMyFavorite","searchCheck","onSetAsFavoriteHero","onSearchSubmit","a","preventDefault","fetch","sendUrl","json","responseJSON","result","message","heroList","liked","some","heroId","copyFavHero","newFavHero","findIndex","splice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.23148400.chunk.js","sourcesContent":["import React, { useRef } from 'react';\n\nimport { css } from 'emotion';\n\nexport default function SearchInput({ searchHandler, setSearchInputHandler ,searchInputHandler }) {\n  const inputSearch = useRef(null);\n\n  const onSearchClick = () => {\n    inputSearch.current.focus();\n  }\n  \n  return (\n    <div className={css`\n      padding: 10px 0 7px 0;\n      margin: 10px 20px;\n      border-bottom: 0.3px solid rgba(15, 15, 15, 0.8);\n    `} onClick={onSearchClick}>\n      <form className={css`\n          text-align: left;\n        `} onSubmit={searchHandler} >\n        <input ref={inputSearch} className={css`\n          border: none;\n          font-size: 20px;\n        `} placeholder=\"Search Hero...\" type=\"text\" onChange={e => setSearchInputHandler(e.target.value)} value={searchInputHandler} />\n      </form>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport { css } from 'emotion';\n\n\nexport default function Menu({ clickedMenu, setClickedMenu }) {\n  const clicked = css`\n    background-color: #fff;\n    color: black;\n    border: 1px solid rgba(15, 15, 15, 0.5);\n  `\n  const unClicked = css`\n    background-color: black;\n    color: #fff;\n    border: #fff;\n  `\n\n  return (\n    <div className={css`\n      display: flex;\n      justify-content: space-between;\n      margin: 15px 20px;\n\n      > div {\n        border-radius: 5px;\n        width: 47%;\n        font-size: 15px;\n      }\n    `}>\n      <div className={clickedMenu === 0 ? clicked : unClicked} onClick={() => setClickedMenu(0)}>\n        <p>\n          Favorite Hero\n        </p>\n      </div>\n      <div className={clickedMenu === 1 ? clicked : unClicked} onClick={() => setClickedMenu(1)}>\n        <p>\n          Search\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { css } from 'emotion';\n\nexport default function Heroes({heroes, heroAction}) {\n  const [ isClicked, setIsClicked ]     = useState(false);\n  const [ heroDetails, setHeroDetails ] = useState({});\n\n  const resetValueAndCloseModal = () => {\n    setIsClicked(false);\n    setHeroDetails({}); // reset statistics\n  }\n\n  function onClickedSearchHero(id) {\n    setIsClicked(true);\n    const getHero = heroes.find(val => val.id === id);\n    console.log(getHero);\n    setHeroDetails(getHero);\n  }\n\n  return (\n    <div>\n      <Modal \n        heroDetails={heroDetails} \n        resetVal={resetValueAndCloseModal} \n        isClicked={isClicked} \n        heroAction={heroAction} />\n\n      {heroes.map(hero => {\n        return <Hero clickedHero={onClickedSearchHero} key={hero.id} hero={hero} />\n      })}\n    </div>\n  )\n}\n\nfunction Modal({ heroDetails, resetVal, isClicked, heroAction }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    setIsOpen(isClicked);\n  }, [ isClicked ]);\n\n  const test = (id) => {\n    heroAction(id);\n    resetVal();\n  }\n\n  return (\n    <div className={css`\n      z-index: 1;\n      position: fixed;\n      display: ${isClicked === false ? \"none\" : \"inline-block\"};\n      background-color: black;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      text-align: left;\n      padding: 20px;\n    `}>\n\n      <div className={css`\n        position: relative;\n      `}>\n        <div className={css`\n          position: absolute;\n          border-radius: 40px;\n          overflow: hidden;\n          top: 10px;\n          right: 10px;\n          text-align: center;\n          font-size: 40px;\n          color: #fff;\n          cursor: pointer;\n        `}\n        onClick={resetVal}>\n          X\n        </div>\n      </div>\n      <Biography heroDetails={ heroDetails } />\n      <PowerStats heroDetails={ heroDetails.powerstats } />\n\n      <div className={css`\n        position: absolute;\n        bottom: 10px;\n        left: 30%;\n        right: 30%;\n\n        > button {\n          font-size: 20px;\n          background: none;\n          width: 100%;\n          border-radius: 5px;\n          border: 0.5px solid rgba(255, 255, 255, 0.7);\n          padding: 20px 0;\n        }\n      `}>\n        { heroDetails.hasOwnProperty(\"liked\") ? \n          <button onClick={() => test(heroDetails.id)} type=\"button\">Remove as favorite</button>\n        : \n          <button onClick={() => heroAction(heroDetails)} type=\"button\">Add to favorite</button>\n        }\n      </div>\n\n      <div className={css`\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        left: 0;\n        background-image: ${isClicked === false ? \"none\" : `linear-gradient(to right, ${heroDetails.appearance[\"eye-color\"]}, rgba(255, 255, 255, 0)), url(${heroDetails.image.url})` };\n        transform: ${isOpen === false ? \"scale(1) rotate(0)\" : \"scale(1.1) rotate(3deg)\"};\n        transition: transform 1.5s ease-out;\n        background-size: cover;\n        filter: grayscale(50%);\n        opacity: 0.2;\n        width: 100%;\n        height: 100%;\n        color: #fff;\n      `}>\n      </div>\n    </div>\n  )\n}\n\nfunction PowerStats({ heroDetails }) {\n  const [ stats, setStats ] = useState({\n    \"combat\": 0,\n    \"durability\": 0,\n    \"intelligence\": 0,\n    \"power\": 0,\n    \"speed\": 0,\n    \"strength\": 0,\n  });\n\n  useEffect(() => {\n    if (typeof heroDetails !== 'undefined') {\n      setStats(heroDetails);\n    }\n  }, [ heroDetails ]);\n\n  return (\n    <div className={css`\n      margin-top: 100px;\n      display: grid;\n      align-items: center;\n      grid-template-columns: repeat(2,1fr);\n\n      > span {\n        height: 20px;\n        background-color: #fff;\n        transition: width 0.5s linear;\n      }\n      > p {\n        margin: 0;\n        margin-right: 10px;\n        font-size: 20px;\n      }\n    `}>\n      <p>Combat</p>\n      <span className={css`\n        width: ${stats.combat}%;\n      `}></span>\n      <p>Durability</p>\n      <span className={css`\n        width: ${stats.durability}%;\n      `}></span>\n      <p>Intelligence</p>\n      <span className={css`\n        width: ${stats.intelligence}%;\n      `}></span>\n      <p>Power</p>\n      <span className={css`\n        width: ${stats.power}%;\n      `}></span>\n      <p>Speed</p>\n      <span className={css`\n        width: ${stats.speed}%;\n      `}></span>\n      <p>Strength</p>\n      <span className={css`\n        width: ${stats.strength}%;\n      `}></span>\n    </div>\n  )\n}\n\nfunction Biography({ heroDetails }) {\n  const [ biography, setBiography ] = useState({\n    \"name\": \"name\",\n    \"biography\": {\n      \"full-name\": \"full name\",\n      \"alter-egos\": \"alter ego\",\n      \"aliases\": [\"alias1\", \"alias2\", \"alias3\"],\n      \"publisher\": \"publisher\"\n    }\n  });\n\n  useEffect(() => {\n    if (Object.keys(heroDetails).length !== 0) {\n      setBiography(heroDetails);\n    }\n  }, [ heroDetails, biography ]);\n\n  return (\n    <div className={css`\n      > p {\n        margin-bottom: 0;\n        font-size: 20px;\n        font-weight: 400;\n      }\n      > i {\n        margin-left: 10px;\n        font-size: 15px;\n      }\n    `}>\n      <div className={css`\n        font-size: 50px;\n        font-weight: 500;\n        border-bottom: 1px solid #fff;\n        padding-bottom: 30px;\n      `}>{biography.name}</div>\n      <p>Full Name</p>\n      <i>{biography.biography[\"full-name\"]}</i>\n      <p>Alter Ego</p>\n      <i>{biography.biography[\"alter-egos\"]}</i>\n      <p>Aliases</p>\n      {biography.biography.aliases.map((alias, idx) => {\n        return <i key={idx}>{alias}</i>\n      })}\n      <p>Publisher</p>\n      <i>{biography.biography.publisher}</i>\n    </div>\n  )\n}\n\nfunction Hero({ clickedHero, hero }) {\n\n  return (\n    <div onClick={() => clickedHero(hero.id)} className={css`   \n      background-color: rgba(15, 15, 15, 1);\n      margin: 5px 10px;\n      display: flex;\n      position: relative;\n      height: 150px;\n      overflow: hidden;\n      padding-left: 10px;\n      text-align: left;\n      cursor: pointer;\n\n      &:hover {\n        box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.8);\n      }\n    `}>\n      <div>\n      <h2>{ hero.name }</h2>\n      <p>full name: <i>{ hero.biography[\"full-name\"] }</i> </p>\n      </div>\n      <div className={css`\n        background-image:\n        linear-gradient(to right, rgba(15, 15, 15, 1), rgba(255, 255, 255, 0)),\n        url(${hero.image.url});\n        filter: grayscale(100%);\n        background-size: cover;\n        position: absolute;\n        width: 50%;\n        height: 100%;\n        right: 0;\n      `}>\n      </div>\n    </div>\n  )\n} ","import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport { css } from 'emotion';\n\nimport SearchInput from './Components/SearchInput';\nimport Menu from './Components/Menu';\nimport Heroes from './Components/Heroes';\n\nfunction App() {\n  const [ heroName, setHeroName ]         = useState([]);\n  const [ favoriteHero, setFavoriteHero ] = useState([]);\n  const [ hasError, setError ]            = useState(\"\");\n  const [ searchInput, setSearchInput ]   = useState(\"\");\n  const [ menu, setMenu ]                 = useState(1);\n  const [ loading, setLoading ]           = useState(false);\n\n  useEffect(() => {\n    setHeroName([]);\n    setSearchInput(\"\");\n  }, [ menu ]); // re-render component if something has changed in menu\n\n  const CheckClickedMenu = () => {\n    if (menu === 0) {\n      return (<Heroes \n              heroes={favoriteHero} \n              heroAction={onRemoveHeroFromMyFavorite}\n            />);\n    }\n    return searchCheck(hasError, heroName);\n  }\n\n  const searchCheck = (hasError, heroName) => {\n    if (hasError === \"\" && heroName.length === 0) return null;\n    if (hasError !== \"\") return <div>kosong</div>;\n    return (<Heroes \n            heroes={heroName} \n            heroAction={onSetAsFavoriteHero} \n            />);\n  }\n  \n  const onSearchSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n      const url           = (`/.netlify/functions/searchHero?heroName=${searchInput}`);\n      const sendUrl       = await fetch(url);\n      const responseJSON  = await sendUrl.json();\n      if (responseJSON.result === \"FAIL\") {\n        setHeroName([]);\n        setLoading(false);\n        return setError(responseJSON.message);\n      }\n      setLoading(false);\n      setError(\"\");\n      setHeroName(responseJSON);\n    } catch (err) {\n      setError(err);\n      console.log(\"error\", err);\n    }\n  }\n\n  const onSetAsFavoriteHero = (hero) => {\n    const liked       = { liked: true }\n    const heroList    = {...hero, ...liked};\n\n    const existedHero = favoriteHero.some(val => val.id === hero.id);\n    if (existedHero) return; // if hero exist in favoriteHero\n\n    if (favoriteHero.length === 0) return setFavoriteHero([...favoriteHero, heroList]); // if no Favorite yet\n\n    setFavoriteHero([...favoriteHero, heroList]) // add new one\n  }\n\n  const onRemoveHeroFromMyFavorite = (heroId) => {\n    const copyFavHero = [...favoriteHero];\n    const newFavHero = favoriteHero.findIndex(hero => hero.id === heroId);\n    copyFavHero.splice(newFavHero, 1);\n    return setFavoriteHero([...copyFavHero]);\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchInput \n        searchHandler={onSearchSubmit} \n        setSearchInputHandler={setSearchInput} \n        searchInputHandler={searchInput} />\n      <Menu clickedMenu={menu} setClickedMenu={setMenu} />\n      <div className={css`\n        display: ${loading === true ? \"inline-block\" : \"none\"};\n        background-color: rgba(15, 15, 15, 1);\n        color: white;\n        width: 100%;\n        height: 10%;\n      `}><p>Loading</p></div>\n      <CheckClickedMenu />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}